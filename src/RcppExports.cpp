// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// chooseRec
long long int chooseRec(int n, int k);
RcppExport SEXP _fastcube_chooseRec(SEXP nSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(chooseRec(n, k));
    return rcpp_result_gen;
END_RCPP
}
// choose
long long int choose(int n, int k);
RcppExport SEXP _fastcube_choose(SEXP nSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(choose(n, k));
    return rcpp_result_gen;
END_RCPP
}
// disj
arma::umat disj(arma::uvec strata);
RcppExport SEXP _fastcube_disj(SEXP strataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::uvec >::type strata(strataSEXP);
    rcpp_result_gen = Rcpp::wrap(disj(strata));
    return rcpp_result_gen;
END_RCPP
}
// ncat
arma::rowvec ncat(arma::umat Xcat);
RcppExport SEXP _fastcube_ncat(SEXP XcatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::umat >::type Xcat(XcatSEXP);
    rcpp_result_gen = Rcpp::wrap(ncat(Xcat));
    return rcpp_result_gen;
END_RCPP
}
// disjMatrix
arma::umat disjMatrix(arma::umat strata);
RcppExport SEXP _fastcube_disjMatrix(SEXP strataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::umat >::type strata(strataSEXP);
    rcpp_result_gen = Rcpp::wrap(disjMatrix(strata));
    return rcpp_result_gen;
END_RCPP
}
// findBarma
arma::mat findBarma(arma::mat X, arma::umat Xcat);
RcppExport SEXP _fastcube_findBarma(SEXP XSEXP, SEXP XcatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::umat >::type Xcat(XcatSEXP);
    rcpp_result_gen = Rcpp::wrap(findBarma(X, Xcat));
    return rcpp_result_gen;
END_RCPP
}
// samplen
arma::mat samplen(int N, int n);
RcppExport SEXP _fastcube_samplen(SEXP NSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(samplen(N, n));
    return rcpp_result_gen;
END_RCPP
}
// systematicDesign
Rcpp::List systematicDesign(arma::vec pik);
RcppExport SEXP _fastcube_systematicDesign(SEXP pikSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type pik(pikSEXP);
    rcpp_result_gen = Rcpp::wrap(systematicDesign(pik));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_fastcube_chooseRec", (DL_FUNC) &_fastcube_chooseRec, 2},
    {"_fastcube_choose", (DL_FUNC) &_fastcube_choose, 2},
    {"_fastcube_disj", (DL_FUNC) &_fastcube_disj, 1},
    {"_fastcube_ncat", (DL_FUNC) &_fastcube_ncat, 1},
    {"_fastcube_disjMatrix", (DL_FUNC) &_fastcube_disjMatrix, 1},
    {"_fastcube_findBarma", (DL_FUNC) &_fastcube_findBarma, 2},
    {"_fastcube_samplen", (DL_FUNC) &_fastcube_samplen, 2},
    {"_fastcube_systematicDesign", (DL_FUNC) &_fastcube_systematicDesign, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_fastcube(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
